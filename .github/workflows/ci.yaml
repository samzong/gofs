name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  # Quality checks for PR and main branch
  check:
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true
        
    - name: Install dependencies
      run: |
        # Install goimports
        go install golang.org/x/tools/cmd/goimports@latest
        # Install golangci-lint
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
        
    - name: Download Go modules
      run: go mod download
      
    - name: Run quality checks
      run: make check

  # Build and release for tags
  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true
        
    - name: Download Go modules
      run: go mod download
      
    - name: Build all platforms
      run: make build-all
      
    - name: Prepare release assets
      run: |
        cd build
        # Create checksums
        sha256sum * > checksums.txt
        # List all files for verification
        ls -la
        
    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        generate_release_notes: false
        body: ""
        files: |
          build/*