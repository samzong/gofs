name: Update Homebrew Tap

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Select the tag to update Homebrew"
        required: true
        type: string
  release:
    types: [released, published]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  update-homebrew:
    runs-on: macos-latest
    if: |
      (github.event_name == 'release' && github.event.action == 'published') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && startsWith(github.event.workflow_run.head_branch, 'refs/tags/v')) ||
      github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Set version
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUT_TAG: ${{ inputs.tag }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            echo "VERSION=$INPUT_TAG" >> $GITHUB_ENV
          elif [ "$EVENT_NAME" = "release" ]; then
            echo "VERSION=$RELEASE_TAG" >> $GITHUB_ENV
          elif [ "$EVENT_NAME" = "workflow_run" ]; then
            # Extract version from workflow_run head_branch (refs/tags/v1.0.0 -> v1.0.0)
            VERSION=$(echo "$HEAD_BRANCH" | sed 's/refs\/tags\///')
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi
          echo "Detected version: $VERSION"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version format
        run: |
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Expected format: v1.2.3"
            exit 1
          fi
          echo "✅ Version format is valid: $VERSION"

      - name: Check if release exists
        run: |
          CLEAN_VERSION=$(echo "$VERSION" | sed 's/^v//')
          echo "Checking release: $VERSION"
          
          # Check if release exists
          curl -s -f -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$VERSION" > /dev/null
          
          if [ $? -eq 0 ]; then
            echo "✅ Release $VERSION exists"
          else
            echo "❌ Release $VERSION not found"
            exit 1
          fi

      - name: Update Homebrew Formula
        env:
          # Fine-grained PAT with specific repository access
          GH_PAT: ${{ secrets.HOMEBREW_PAT }}
        run: |
          if [ -z "$GH_PAT" ]; then
            echo "❌ HOMEBREW_PAT secret is required for cross-repository operations"
            echo "Please create a Fine-grained PAT with the following permissions:"
            echo "  Repository: samzong/homebrew-tap"
            echo "  Permissions: Contents (write), Pull requests (write), Metadata (read)"
            echo "  Add it as HOMEBREW_PAT secret in repository settings"
            exit 1
          fi
          make update-homebrew
