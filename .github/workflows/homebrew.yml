name: Update Homebrew Tap

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Select the tag to update Homebrew"
        required: true
        type: string
  push:
    tags:
      - 'v*'

jobs:
  update-homebrew:
    runs-on: macos-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Set version
        env:
          EVENT_NAME: ${{ github.event_name }}
          INPUT_TAG: ${{ inputs.tag }}
          PUSH_TAG: ${{ github.ref_name }}
        run: |
          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            echo "VERSION=$INPUT_TAG" >> $GITHUB_ENV
            echo "Detected version from workflow_dispatch: $INPUT_TAG"
          elif [ "$EVENT_NAME" = "push" ]; then
            echo "VERSION=$PUSH_TAG" >> $GITHUB_ENV
            echo "Detected version from push tag: $PUSH_TAG"
          else
            echo "❌ Unexpected event: $EVENT_NAME"
            exit 1
          fi

      - name: Wait for release to be created (only for push events)
        if: github.event_name == 'push'
        run: |
          echo "Waiting for GoReleaser to create the release..."
          sleep 60
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version format
        run: |
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Expected format: v1.2.3"
            exit 1
          fi
          echo "✅ Version format is valid: $VERSION"

      - name: Check if release exists
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          CLEAN_VERSION=$(echo "$VERSION" | sed 's/^v//')
          echo "Checking release: $VERSION"
          
          # Check if release exists
          if gh release view "$VERSION" --repo "${{ github.repository }}" >/dev/null 2>&1; then
            echo "✅ Release $VERSION exists"
          else
            echo "❌ Release $VERSION not found"
            exit 1
          fi

      - name: Update Homebrew Formula
        env:
          # Fine-grained PAT with specific repository access
          GH_PAT: ${{ secrets.HOMEBREW_PAT }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          if [ -z "$GH_PAT" ]; then
            echo "❌ HOMEBREW_PAT secret is required for cross-repository operations"
            echo "Please create a Fine-grained PAT with the following permissions:"
            echo "  Repository: samzong/homebrew-tap"
            echo "  Permissions: Contents (write), Pull requests (write), Metadata (read)"
            echo "  Add it as HOMEBREW_PAT secret in repository settings"
            exit 1
          fi
          
          # Make sure script is executable
          chmod +x ./scripts/update-homebrew.sh
          
          # Call the script directly instead of make
          ./scripts/update-homebrew.sh "$VERSION"
