# GoReleaser configuration for gofs
# See: https://goreleaser.com

version: 2

project_name: gofs

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - id: gofs
    main: ./cmd/gofs
    binary: gofs
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.buildTime={{.Date}}

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^style:"
      - Merge pull request
      - Merge branch

# Docker images
dockers:
  - id: gofs-amd64
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile.goreleaser
    use: buildx
    image_templates:
      - "ghcr.io/samzong/gofs:{{ .Tag }}-amd64"
      - "ghcr.io/samzong/gofs:latest-amd64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}" 
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/samzong/gofs"
      - "--label=org.opencontainers.image.description=Simple file server written in Go"
      - "--platform=linux/amd64"

  - id: gofs-arm64
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile.goreleaser
    use: buildx
    image_templates:
      - "ghcr.io/samzong/gofs:{{ .Tag }}-arm64"
      - "ghcr.io/samzong/gofs:latest-arm64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source=https://github.com/samzong/gofs"
      - "--label=org.opencontainers.image.description=Simple file server written in Go"
      - "--platform=linux/arm64"

# Docker manifests for multi-arch images
docker_manifests:
  - name_template: "ghcr.io/samzong/gofs:{{ .Tag }}"
    image_templates:
      - "ghcr.io/samzong/gofs:{{ .Tag }}-amd64"
      - "ghcr.io/samzong/gofs:{{ .Tag }}-arm64"
  
  - name_template: "ghcr.io/samzong/gofs:latest"
    image_templates:
      - "ghcr.io/samzong/gofs:latest-amd64"
      - "ghcr.io/samzong/gofs:latest-arm64"

release:
  github:
    owner: samzong
    name: gofs
  draft: false
  prerelease: auto
  mode: replace
  replace_existing_artifacts: true
  header: |
    ## What's Changed
    
    ### Docker Images
    
    Multi-architecture Docker images are available on GitHub Container Registry:
    
    ```bash
    # Pull latest version
    docker pull ghcr.io/samzong/gofs:{{ .Tag }}
    docker pull ghcr.io/samzong/gofs:latest
    
    # Run the container
    docker run -p 8000:8000 -v $(pwd):/data:ro ghcr.io/samzong/gofs:{{ .Tag }}
    ```
    
    Supported architectures: `linux/amd64`, `linux/arm64`
  footer: |
    **Full Changelog**: https://github.com/samzong/gofs/compare/{{ .PreviousTag }}...{{ .Tag }}

# Homebrew tap configuration
brews:
  - name: gofs
    
    # Target repository for the Homebrew formula
    repository:
      owner: samzong
      name: homebrew-tap
      # Create a new branch for each release
      branch: "update-gofs-{{ .Tag }}"
      # Create a pull request instead of direct push
      pull_request:
        enabled: true
        base:
          branch: main
      
      # Token with write access to the tap repository
      # Set HOMEBREW_TAP_TOKEN in GitHub secrets
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    
    # Formula metadata
    homepage: "https://github.com/samzong/gofs"
    description: "A lightweight, fast HTTP file server written in Go"
    license: "MIT"
    
    # Directory in the tap repository where the formula will be created
    directory: Formula
    
    # Use the archive name template that matches your existing formula structure
    url_template: "https://github.com/samzong/gofs/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    
    # Commit author for the formula update
    commit_author:
      name: github-actions[bot]
      email: 41898282+github-actions[bot]@users.noreply.github.com
    
    # Test block for the formula
    test: |
      system "#{bin}/gofs", "--version"
    
    # Installation instructions
    install: |
      bin.install "gofs"
    
    # Skip upload if formula already exists with same version
    # Set to false to always create PR, even for pre-releases
    skip_upload: false
